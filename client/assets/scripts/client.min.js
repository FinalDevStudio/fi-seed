!function(ng) {
    "use strict";
    ng.module("App", [ "ngRoute", "angularFileUpload", "Session" ]);
}(angular), function(ng) {
    "use strict";
    var timeout;
    ng.module("Session", []).factory("$session", [ "$rootScope", "$timeout", function($rootScope, $timeout) {
        return $rootScope.session = {}, {
            login: function(user) {
                $rootScope.session.user = user;
            },
            logout: function() {
                delete $rootScope.session.user;
            },
            flash: function(type, message) {
                $timeout.cancel(timeout), message ? ($rootScope.session.flash = {
                    message: message,
                    type: type
                }, timeout = $timeout(function() {
                    delete $rootScope.session.flash;
                }, 5e3)) : delete $rootScope.session.flash;
            },
            user: function(field) {
                return $rootScope.session.user[field];
            },
            get: function(key) {
                return $rootScope.session[key];
            },
            set: function(key, value) {
                $rootScope.session[key] = value;
            },
            "delete": function(key) {
                delete $rootScope.session[key];
            }
        };
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").factory("$io", function() {
        return {
            connect: function(namespace, options) {
                return window.io(namespace, options);
            }
        };
    });
}(angular), function(ng) {
    "use strict";
    ng.module("App").factory("$statics", [ "$http", "$q", function($http, $q) {
        return {
            get: function(param) {
                var deferred = $q.defer(), query = {}, name = "";
                if (!param) throw new TypeError("Parameter cannot be null!");
                if (!angular.isArray(param) && !angular.isString(param)) throw new TypeError("Wrong parameter type! Must be a String or an Array.");
                return query.params = {
                    statics: param
                }, $http.get("/api/statics" + name, query).success(function(data) {
                    deferred.resolve(data);
                }).error(function(data, status) {
                    deferred.reject(data, status);
                }), deferred.promise;
            }
        };
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Navbar", [ "$scope", "$location", "$http", "$session", function($scope, $location, $http, $session) {
        $scope.signout = function() {
            $http.get("/api/users/signout").success(function() {
                $session.flash("success", "See you soon " + $session.user("name") + "!"), $session.logout(), 
                $location.path("/");
            }).error(function() {
                $session.flash("danger", "Logout failed!");
            });
        };
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Pages:Dashboard", [ "$scope", "$http", "$location", "$session", function() {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Pages:Help", [ "$scope", "$window", function($scope, $window) {
        $scope.back = function() {
            $window.history.back();
        };
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Users:Recover", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {
        $scope.submitting = !1, $scope.submit = function() {
            $scope.submitting = !0, $http.post("/api/users/recover", {
                email: $scope.form.email
            }).success(function() {
                $location.path("/"), $session.flash("success", "Please check your email inbox. Dont forget to check the SPAM folder just in case.");
            }).error(function() {
                $session.flash("danger", "Invalid Email! ... or something...");
            })["finally"](function() {
                $scope.submitting = !1;
            });
        };
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Users:SignIn", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {
        $scope.error = !1, $scope.submitting = !1, $scope.submit = function() {
            $scope.submitting = !0, $session.flash(), $http.post("/api/users/signin", {
                email: $scope.form.email,
                password: $scope.form.password
            }).success(function(user) {
                $session.login(user), $location.path("/dashboard"), $session.flash("success", "Welcome back " + user.name + "!");
            }).error(function() {
                $session.flash("danger", "Wrong email or password");
            })["finally"](function() {
                $scope.submitting = !1;
            });
        };
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Users:SignOut", [ "$scope", "$location", "$http", "$session", function() {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Users:SignUp", [ "$scope", "$http", "$location", "$session", "statics", function($scope, $http, $location, $session, statics) {
        $scope.submitting = !1, $scope.statics = statics, $scope.submit = function() {
            $scope.submitting = !0, $session.flash(), $http.post("/api/users", {
                name: $scope.form.name,
                email: $scope.form.email,
                gender: $scope.form.gender._id,
                password: $scope.form.password
            }).success(function(user) {
                $session.login(user), $location.path("/dashboard"), $session.flash("success", "Account created! Welcome " + user.name + "!");
            }).error(function(data, status) {
                409 === status ? $session.flash("warning", "That email account is already registered. Do you need to recover your password?") : 400 === status ? $session.flash("warning", "You entered something invalid.") : $session.flash("danger", "Emmmm... The server doen't seem to like you...");
            })["finally"](function() {
                $scope.submitting = !1;
            });
        };
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").config([ "$routeProvider", function($routeProvider) {
        $routeProvider.when("/", {
            templateUrl: "/templates/pages/home.html"
        }).when("/help", {
            controller: "Pages:Help",
            templateUrl: "/templates/pages/help.html"
        }).when("/dashboard", {
            controller: "Pages:Dashboard",
            templateUrl: "/templates/pages/dashboard.html"
        });
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").config([ "$routeProvider", function($routeProvider) {
        $routeProvider.when("/users/signup", {
            controller: "Users:SignUp",
            templateUrl: "/templates/users/signup.html",
            resolve: {
                statics: [ "$statics", function($statics) {
                    return $statics.get("genders");
                } ]
            }
        }).when("/users/signin", {
            controller: "Users:SignIn",
            templateUrl: "/templates/users/signin.html"
        }).when("/users/signout", {
            controller: "Users:SignOut"
        }).when("/users/recover", {
            controller: "Users:Recover",
            templateUrl: "/templates/users/recover.html"
        });
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").config([ "$routeProvider", "$locationProvider", function($routeProvider, $locationProvider) {
        $routeProvider.otherwise({
            redirectTo: "/notfound"
        }).when("/notfound", {
            templateUrl: "/templates/notfound.html"
        }), $locationProvider.html5Mode(!0);
    } ]).run([ "$rootScope", "$location", "$session", "$http", function($rootScope, $location, $session, $http) {
        $http.get("/api/session").success(function(data) {
            $session.login(data.user), $location.path("/dashboard");
        }).error(function() {
            $location.path("/");
        });
    } ]);
}(angular);